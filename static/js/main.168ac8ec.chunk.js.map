{"version":3,"sources":["App.js","movieList.js","movie.js","index.js"],"names":["React","Component","MovieList","year","title","summary","poster","genres","className","src","alt","map","number","key","slice","prototype","id","PropTypes","isRequired","string","arrayOf","Movie","state","isLoading","movies","axios","get","data","this","setState","getMovies","medium_cover_image","ReactDOM","render","document","getElementById"],"mappings":"qPAwDkBA,IAAMC,UAxBxB,I,+DC3BA,SAASC,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,aACX,wBAAIA,UAAU,cAAcJ,GAC5B,wBAAII,UAAU,aAAaL,GAC3B,wBAAIK,UAAU,eAETD,EAAOI,KAAI,SAACJ,EAAQK,GAAT,OACR,wBAAIC,IAAKD,EAAQJ,UAAU,cACtBD,OAIb,uBAAGC,UAAU,gBAAgBH,EAAQS,MAAM,EAAG,KAA9C,SAMhBZ,EAAUa,UAAY,CAClBC,GAAIC,IAAUL,OAAOM,WACrBf,KAAMc,IAAUL,OAAOM,WACvBd,MAAOa,IAAUE,OAAOD,WACxBb,QAASY,IAAUE,OAAOD,WAC1BZ,OAAQW,IAAUE,OAAOD,WACzBX,OAAQU,IAAUG,QAAQH,IAAUE,QAAQD,YAGjChB,QC2BAmB,G,kNAxDXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,4LAUEC,IAAMC,IACZ,yD,gBAHYF,E,EADZG,KACIA,KAAQH,OAKhBI,KAAKC,SAAS,CAAEL,SAAQD,WAAW,I,gJAKnCK,KAAKE,c,+BAGC,IAAD,EACuBF,KAAKN,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAEjB,OACI,6BACI,6BAAShB,UAAU,aACde,EACG,yBAAKf,UAAU,UACX,0BAAMA,UAAU,cAAhB,mBAGJ,yBAAKA,UAAU,aACVgB,EAAOb,KAAI,SAACgB,GACT,OACI,kBAAC,EAAD,CACId,IAAKc,EAAKX,GACVA,GAAIW,EAAKX,GACTb,KAAMwB,EAAKxB,KACXC,MAAOuB,EAAKvB,MACZC,QAASsB,EAAKtB,QACdC,OAAQqB,EAAKI,mBACbxB,OAAQoB,EAAKpB,mB,GA7CjCP,IAAMC,YCE1B+B,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,W","file":"static/js/main.168ac8ec.chunk.js","sourcesContent":["import React from \"react\";\nimport Test1 from \"./Test1\";\nimport PropTypes from \"prop-types\";\n\n// props 로 모든 데이터를 받아 올 수 있슴, {변수명} 으로 필요데이터만 받아올 수도 있슴.\nfunction Test2(porps /*, { rere }*/) {\n    return (\n        <h4>\n            {porps.porps1}, {porps.testName}\n        </h4>\n    );\n}\n\nfunction Test3({ name }, { age }) {\n    return (\n        <h4>\n            {name}, {age}\n        </h4>\n    );\n}\n\n// props 들의 type 을 점검.\nTest3.propTypes = {\n    name: PropTypes.string.isRequired,\n    age: PropTypes.number,\n};\n\n// react 내부에서 구분을 위해 서로 다른 key 값이 필요함.\nfunction drawTest3(user) {\n    return <Test3 key={user.id} name={user.name} age={user.age} />;\n}\n\nlet testValue = [\n    {\n        id: 1,\n        name: \"loki\",\n        age: 26,\n    },\n    {\n        id: 2,\n        name: \"imoge\",\n        age: 32,\n    },\n    {\n        id: 3,\n        name: \"Occ\",\n        age: 30,\n    },\n    {\n        id: 4,\n        name: \"kang\",\n        age: 31,\n    },\n];\n\n// class component\nclass App extends React.Component {\n    // class 를 사용할때 사용 가능.\n    // 변경하고싶은 데이터를 state 에 저장.\n    state = {\n        count: 0,\n    };\n\n    add = () => {\n        // state 를 변경할때는 반드시 setState 로 새로운 state 를 만들어서 자동으로 refresh 되도록.\n        // 절대 기존에 선언한 state를 직접 변형하지 않는다.\n        this.setState((current) => ({ count: current.count + 1 }));\n    };\n\n    minus = () => {\n        this.setState((current) => ({ count: current.count - 1 }));\n    };\n\n    // function 이 아니기때문에 render 메소드 사용.\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Count : {this.state.count}</h1>\n                <button onClick={this.add}>Add</button>\n                <button onClick={this.minus}>Minus</button>\n            </div>\n        );\n    }\n}\n\n/*\n// function component\nfunction App() {\n    return (\n        <div className=\"App\">\n            Hello <Test1 />\n            <Test2 porps1=\"test\" testName=\"testName\" rere=\"rere\" />\n            {testValue.map(function (user) {\n                return drawTest3(user);\n            })}\n        </div>\n    );\n}\n*/\n\nexport default App;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./movieList.css\";\r\n\r\n// state 를 사용하지 않을거면 function component 로 해도 무관.\r\nfunction MovieList({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}></img>\r\n            <div className=\"movieData\">\r\n                <h3 className=\"movieTitle\">{title}</h3>\r\n                <h5 className=\"movieYear\">{year}</h5>\r\n                <ul className=\"movieGenres\">\r\n                    {/*map 은 데이터말고도 데이터 넘버를 전달해 줌*/}\r\n                    {genres.map((genres, number) => (\r\n                        <li key={number} className=\"genresList\">\r\n                            {genres}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movieSummary\">{summary.slice(0, 140)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovieList.prototype = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport MovieList from \"./movieList\";\r\nimport \"./movie.css\";\r\n\r\nclass Movie extends React.Component {\r\n    state = {\r\n        isLoading: true,\r\n        movies: [],\r\n    };\r\n\r\n    async getMovies() {\r\n        // let movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\r\n        // ES6 식 표현.\r\n        let {\r\n            data: {\r\n                data: { movies },\r\n            },\r\n        } = await axios.get(\r\n            \"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"\r\n        );\r\n        this.setState({ movies, isLoading: false });\r\n    }\r\n\r\n    // component가 랜더링 완료 후.  javascript 기능 사용 가능.\r\n    componentDidMount() {\r\n        this.getMovies();\r\n    }\r\n\r\n    render() {\r\n        let { isLoading, movies } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <section className=\"container\">\r\n                    {isLoading ? (\r\n                        <div className=\"loader\">\r\n                            <span className=\"loaderText\">Now Loading...</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"movieList\">\r\n                            {movies.map((data) => {\r\n                                return (\r\n                                    <MovieList\r\n                                        key={data.id}\r\n                                        id={data.id}\r\n                                        year={data.year}\r\n                                        title={data.title}\r\n                                        summary={data.summary}\r\n                                        poster={data.medium_cover_image}\r\n                                        genres={data.genres}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Movie from \"./movie\";\n\n// 컴퍼넌트를 해당 경로 div 아래 생성.  하나의 컴퍼넌트만 가능.\n// 컴퍼는트란 html 을 리턴하는 함수.\nReactDOM.render(<Movie />, document.getElementById(\"root\"));\n"],"sourceRoot":""}